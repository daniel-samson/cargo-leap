# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=cargo-leap

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: j+TJZRAruoluICJ+WpVpKJEP8Jjmu307Iu8jNcyqIeBFt3PqZlJkl2VM9rxuGeHNm3+R4PoVYWvDVLluGrcXptYRSjHUSw85SqSZvO8Ofe88Ld3U91PWbDcMC/uiCk21RvnNCM0OBOjuQjS8hx1N/NVnsUnlcwKM2vBmGAciqZYhSUQxNY3C6Q9YpQNuq5NIEKA9qG3v8q2OKXvH3TgC6vNQHPS3msyjFNgg8GYs5UNdEP1SlYZry0czDGP2knzreCM/4YS/Dn5ZplBds9Lv5lyrloZB1x+htX5l0NhIXiK/LEyl9HiveYOT6hMqzv2ncAa43TICw0OvTS0PNXlIXLa+Hd9k9mwhilBakMLZ7gcfJkuVYhyW7i2R1cbfbxYPfC7npIYS0wQKTEVsz7aSEERiBvBTkXE5bCZDFmZS0SYblJN6wIivcZAO3UQlU4BRgYDid/sSNHGLHFrfeuUITORK5Y9fbDotvQdDK4YO7xaAR+rNLEpfJjfk0LjGWgRApxEXs2IQFResMTHAtsFrNN4kMa58sfaQxTQScSlzKCS2Gfep14nSoxlK+eT9a3SGUJNGjndzNMu4oc+XIbIp5VADzk0VcvXlXkJyJ3WVnJ2D3nqPc2lyJm0B+TBVWT7/VjFsiN0lfjV9KHm32/VQAdErcSTE6CWhyKRmM1zLLVY=
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - develop

notifications:
  email:
    on_success: never
